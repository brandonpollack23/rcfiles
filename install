#!/bin/bash
set -e

if [[ -z $HOME ]];then
    echo "must have a home directory!"
fi

echo "$(whoami)"

[ "$UID" -eq 0 ] || exec sudo HOME=$HOME "$0" -u ${USER}

getopts ":u:" u
case $u in
    u)
        CALLING_USER=$OPTARG
        ;;
    *)
        echo "dont run as root, just run and let me do it"
        exit 1
esac

echo "Installing to home directory: $HOME"

declare -A osInfo;
apt="apt-get install -my"
osInfo[/etc/debian_version]=$apt
apk="apk --update add"
osInfo[/etc/alpine-release]=$apk
yum="yum install -y"
osInfo[/etc/centos-release]=$yum
dnf="dnf install -y"
osInfo[/etc/fedora-release]=$dnf

for f in ${!osInfo[@]}
do
    if [[ -f $f ]];then
        package_manager=${osInfo[$f]}
    fi
done

if [[ -f "/etc/debian_version" ]]; then
    # Enable non free sources in Debian based os's that use it's packages.
    echo "Debian System Detected!"
    set +e
    CONFIGURED_SOURCES=$(grep -E -e "\<contrib\>" -e "\<non-free\>" /etc/apt/sources.list)
    set -e
    if [[ -z $CONFIGURED_SOURCES ]]; then
        echo "Configuring sources to include contrib and nonfree"
        sed -i 's/debian\.org.*$/& contrib non-free/g' /etc/apt/sources.list
    fi
    apt update

    platform_packages="fortunes-debian-hints debian-handbook texinfo-doc-nonfree devscripts"
    export LOGIN_FORTUNES="debian-hints"
fi

optional_stupid_packages="figlet lolcat"
packages="git tmux zsh vim curl tree nodejs npm imagemagick chroma fzf man2html \
ruby info2www cowsay fortune-mod info pinfo $platform_packages $optional_stupid_packages"

${package_manager} ${packages} || true

gem install mdless || true

# Enable apache cgi (for man2html)
a2enmod cgid

mkdir -p $HOME/.vim/backupdir
chown $CALLING_USER $HOME/.vim/backupdir
mkdir -p $HOME/.vim/swapdir
chown $CALLING_USER $HOME/.vim/swapdir

RCFILESDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# Make directories
mkdir -p $HOME/.vim/swapdir
chown $CALLING_USER $HOME/.vim/swapdir
mkdir -p $HOME/.vim/backupdir
chown $CALLING_USER $HOME/.vim/backupdir
mkdir -p $HOME/.config
chown $CALLING_USER $HOME/.config

# Make symbolic links into this dir
ln -sfn $RCFILESDIR/.zshrc $HOME/.zshrc
chown $CALLING_USER $HOME/.zshrc
ln -sfn $RCFILESDIR/zsh-plugins $HOME/zsh-plugins
chown $CALLING_USER $HOME/zsh-plugins
ln -sfn $RCFILESDIR/.oh-my-zsh $HOME/.oh-my-zsh
chown $CALLING_USER $HOME/.oh-my-zsh
ln -sfn $RCFILESDIR/.vimrc $HOME/.vimrc
chown $CALLING_USER $HOME/.vimrc
ln -sfn $RCFILESDIR/.tmux.conf $HOME/.tmux.conf
chown $CALLING_USER $HOME/.tmux.conf
ln -sfn $RCFILESDIR/.gitconfig $HOME/.gitconfig
chown $CALLING_USER $HOME/.gitconfig
ln -sfn $RCFILESDIR/.vim/pack $HOME/.vim/pack
chown $CALLING_USER $HOME/.vim/pack
ln -sfn $RCFILESDIR/.vim/colors $HOME/.vim/colors
chown $CALLING_USER $HOME/.vim/colors
ln -sfn $RCFILESDIR/.config/coc $HOME/.config/coc
chown $CALLING_USER $HOME/.config/coc
ln -sfn $RCFILESDIR/.cowrc $HOME/.cowrc
chown $CALLING_USER $HOME/.cowrc
ln -sfn $RCFILESDIR/.cowfiles $HOME/.cowfiles
chown $CALLING_USER $HOME/.cowfiles

# Load rebuild documents in vim
vim +"helptags ALL" +":exit"

# Change to zsh
chsh -s `which zsh` $CALLING_USER

echo "Setup complete, please logout and log back in to access the new shell enviornment"
